// [o] function MqttNode(clientId, devAttrs)

// this._nextTransId = function (intf)
// this.encrypt = function (msg)
// this.decrypt = function (msg)

// MqttNode.prototype._init = function ()
// MqttNode.prototype._has = function (oid, iid, rid)
// MqttNode.prototype._target = function (oid, iid, rid)
// MqttNode.prototype._dumpObj = function (oid, iid, callback)
// MqttNode.prototype._getAttrs = function (oid, iid, rid)
// MqttNode.prototype._setAttrs = function (oid, iid, rid, attrs)

// [o] MqttNode.prototype.connect = function (brokerUrl, opts)
// [o] MqttNode.prototype.close = function (force, callback)
// [o] MqttNode.prototype.setDevAttrs = function (attrs) {
// [o] MqttNode.prototype.initResrc = function (oid, iid, resrcs)
// [o] MqttNode.prototype.readResrc = function (oid, iid, rid, callback)
// [o] MqttNode.prototype.writeResrc = function (oid, iid, rid, value, callback)
// [A] MqttNode.prototype.execResrc = function (oid, iid, rid, argus, callback)
// [o] MqttNode.prototype.publish = function (topic, message, options, callback)
// [o] MqttNode.prototype.subscribe = function (topics, opts, callback)
// [o] MqttNode.prototype.unsubscribe = function (topics, callback)

// [o] MqttNode.prototype.pubRegister = function (callback)
// [o] MqttNode.prototype.pubDeregister = function (callback)
// [o] MqttNode.prototype.pubNotify = function (data, callback)
// [o] MqttNode.prototype.pingServer = function (callback)
// MqttNode.prototype.pubUpdate = function (devAttrs, callback)
// MqttNode.prototype.pubResponse = function (rsp, callback)
// MqttNode.prototype.enableReport = function (oid, iid, rid)
// MqttNode.prototype.disableReport = function (oid, iid, rid)

// function _addPrivateListener(emitter, evt, lsn)
// function _removePrivateListeners(emitter, evt)
// function _lwmqnSubAndReg(qn)
// function _reqTimeout(qn, key, delay)
// function _pubReq(qn, intf, data, callback)
// function _lfUpdate(qn, enable)
// function _checkAndReportResrc(qn, oid, iid, rid, currVal)
// function _readResrc(qn, chk, oid, iid, rid, callback)
// function _reqHdlr(qn, msg)
// function _rawHdlr(qn, topic, message, packet)

// function _readReqHandler(node, trg, msg, cb)
// function _writeReqHandler(node, trg, msg, cb)
// function _discoverReqHandler(node, trg, msg, cb)
// function _writeAttrsReqHandler(node, trg, msg, cb)
// function _executeReqHandler(node, trg, msg, cb)
// function _observeReqHandler(node, trg, msg, cb)
// function _unknownReqHandler(node, trg, msg, cb)
